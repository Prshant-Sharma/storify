/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface XStorify {
        "duration": number;
        "effect": string;
        "height": number;
        "radius": number;
        "startAt": number;
        "width": number;
        "withShadow": boolean;
    }
    interface XStorifyProgress {
        /**
          * Current image index to show
         */
        "currentIndex": number;
        /**
          * Pprogress' animation duration
         */
        "duration": number;
        /**
          * Count of images
         */
        "segments": number;
    }
    interface XStorifyStory {
        /**
          * Placeholder for lazy loading Use low quality image placeholders for this. It can be an URL or a base64 string
         */
        "placeholder": string;
        /**
          * Determines if the placeholder is visible Local use only
         */
        "previewVisible": boolean;
        /**
          * Image absolute or relative url
         */
        "src": string;
        /**
          * Checks if an image is available to show
         */
        "visible": boolean;
    }
}
declare global {
    interface HTMLXStorifyElement extends Components.XStorify, HTMLStencilElement {
    }
    var HTMLXStorifyElement: {
        prototype: HTMLXStorifyElement;
        new (): HTMLXStorifyElement;
    };
    interface HTMLXStorifyProgressElement extends Components.XStorifyProgress, HTMLStencilElement {
    }
    var HTMLXStorifyProgressElement: {
        prototype: HTMLXStorifyProgressElement;
        new (): HTMLXStorifyProgressElement;
    };
    interface HTMLXStorifyStoryElement extends Components.XStorifyStory, HTMLStencilElement {
    }
    var HTMLXStorifyStoryElement: {
        prototype: HTMLXStorifyStoryElement;
        new (): HTMLXStorifyStoryElement;
    };
    interface HTMLElementTagNameMap {
        "x-storify": HTMLXStorifyElement;
        "x-storify-progress": HTMLXStorifyProgressElement;
        "x-storify-story": HTMLXStorifyStoryElement;
    }
}
declare namespace LocalJSX {
    interface XStorify {
        "duration"?: number;
        "effect"?: string;
        "height"?: number;
        "radius"?: number;
        "startAt"?: number;
        "width"?: number;
        "withShadow"?: boolean;
    }
    interface XStorifyProgress {
        /**
          * Current image index to show
         */
        "currentIndex"?: number;
        /**
          * Pprogress' animation duration
         */
        "duration"?: number;
        "onAnimationEnds"?: (event: CustomEvent<void>) => void;
        /**
          * Count of images
         */
        "segments"?: number;
    }
    interface XStorifyStory {
        /**
          * Placeholder for lazy loading Use low quality image placeholders for this. It can be an URL or a base64 string
         */
        "placeholder"?: string;
        /**
          * Determines if the placeholder is visible Local use only
         */
        "previewVisible"?: boolean;
        /**
          * Image absolute or relative url
         */
        "src"?: string;
        /**
          * Checks if an image is available to show
         */
        "visible"?: boolean;
    }
    interface IntrinsicElements {
        "x-storify": XStorify;
        "x-storify-progress": XStorifyProgress;
        "x-storify-story": XStorifyStory;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "x-storify": LocalJSX.XStorify & JSXBase.HTMLAttributes<HTMLXStorifyElement>;
            "x-storify-progress": LocalJSX.XStorifyProgress & JSXBase.HTMLAttributes<HTMLXStorifyProgressElement>;
            "x-storify-story": LocalJSX.XStorifyStory & JSXBase.HTMLAttributes<HTMLXStorifyStoryElement>;
        }
    }
}
